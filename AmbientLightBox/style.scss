* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

@mixin animate($animation, $duration, $method, $times) {
  animation: $animation $duration $method $times;
}
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #242424;

  .cube {
    position: relative;
    width: 300px;
    height: 300px;
    transform-style: preserve-3d;
    transform: rotateX(-30deg);

    .hat{
        position: absolute;
        top: 0;
        left: 0;
        width: 300px;
        height: 300px;
        transform: rotateX(90deg) translateZ(150px);
        background: #242424;

        &::before{
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 300px;
            height: 300px;
            background: #00CC00;
            filter: blur(20px);
            box-shadow: 0 0 200px rgb(0, 204, 0,0.2), 0 0 300px rgba(0,204,0,0.4),0 0 400px rgba(0,204,0,0.6),0 0 500px rgba(0,204,0,0.8),0 0 600px rgba(0,204,0,1);
            transform: translateZ(-380px);
        }
    }

    @include keyframes(rot) {
      0% {
        transform: rotateX(-30deg) rotateY(0deg);
      }

      100% {
        transform: rotateX(-30deg) rotateY(360deg);
      }
    }
    @include animate(rot, 4s, linear, infinite);

    div {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;

      span {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        // transform-style: preserve-3d;
        background: linear-gradient(#242424, #00CC00);
        transform: rotateY(calc(90deg * var(--i))) translateZ(150px);
      }
    }
  }
}
